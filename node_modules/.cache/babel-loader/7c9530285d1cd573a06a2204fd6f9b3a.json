{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: \"https://awb-tracker.herokuapp.com/\"\n});\n\nconst checkUrl = url => {\n  const excludedEndpoints = [\"login\", \"register\", \"track\"];\n  return !excludedEndpoints.reduce((acc, curr) => acc || url.indexOf(curr) !== -1, false);\n}; // Add a request interceptor\n\n\ninstance.interceptors.request.use(function (config) {\n  if (checkUrl(config.url)) {\n    config.headers.token = localStorage.getItem(\"token\");\n  }\n\n  console.log(\"axios intercepter  lets seeeeee\", config, checkUrl(config.url));\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"sources":["/Users/samarthsaxena/Desktop/tracker/react-tracker/src/API/index.js"],"names":["axios","instance","create","baseURL","checkUrl","url","excludedEndpoints","reduce","acc","curr","indexOf","interceptors","request","use","config","headers","token","localStorage","getItem","console","log","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE;AADmB,CAAb,CAAjB;;AAIA,MAAMC,QAAQ,GAAGC,GAAG,IAAI;AACtB,QAAMC,iBAAiB,GAAG,CAAC,OAAD,EAAU,UAAV,EAAsB,OAAtB,CAA1B;AAEA,SAAO,CAACA,iBAAiB,CAACC,MAAlB,CACN,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,IAAIH,GAAG,CAACK,OAAJ,CAAYD,IAAZ,MAAsB,CAAC,CADvC,EAEN,KAFM,CAAR;AAID,CAPD,C,CASA;;;AACAR,QAAQ,CAACU,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACE,UAASC,MAAT,EAAiB;AACf,MAAIV,QAAQ,CAACU,MAAM,CAACT,GAAR,CAAZ,EAA0B;AACxBS,IAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAvB;AACD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CACE,iCADF,EAEEN,MAFF,EAGEV,QAAQ,CAACU,MAAM,CAACT,GAAR,CAHV;AAKA,SAAOS,MAAP;AACD,CAZH,EAaE,UAASO,KAAT,EAAgB;AACd;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAhBH;AAmBA,eAAepB,QAAf","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://awb-tracker.herokuapp.com/\"\n});\n\nconst checkUrl = url => {\n  const excludedEndpoints = [\"login\", \"register\", \"track\"];\n\n  return !excludedEndpoints.reduce(\n    (acc, curr) => acc || url.indexOf(curr) !== -1,\n    false\n  );\n};\n\n// Add a request interceptor\ninstance.interceptors.request.use(\n  function(config) {\n    if (checkUrl(config.url)) {\n      config.headers.token = localStorage.getItem(\"token\");\n    }\n\n    console.log(\n      \"axios intercepter  lets seeeeee\",\n      config,\n      checkUrl(config.url)\n    );\n    return config;\n  },\n  function(error) {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}