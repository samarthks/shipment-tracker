{"ast":null,"code":"var _jsxFileName = \"/Users/samarthsaxena/Desktop/tracker/react-tracker/src/components/Dashboard/Dashboard.jsx\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport TableView from \"./TableView\";\nimport { Route } from \"react-router-dom\";\nimport awbTrackerApi from \"../../API\";\nimport { withAlert } from \"react-alert\";\nimport AddEditAwb from \"./AddAwb\";\nconst addAwbForm = [{\n  name: \"awbNo\",\n  label: \"AWB Number\"\n}, {\n  name: \"from\",\n  label: \"From\"\n}, {\n  name: \"to\",\n  label: \"To\"\n}, {\n  name: \"courierCompany\",\n  label: \"Courier Company\"\n}, {\n  name: \"courierType\",\n  label: \"Courier Type\"\n}, {\n  name: \"charge\",\n  label: \"Shimpment Amount\"\n}];\nconst statusUpadteForm = [{\n  name: \"currentLocation\",\n  label: \"Current Location\"\n}, {\n  name: \"status\",\n  label: \"Status\"\n}, {\n  name: \"description\",\n  label: \"Description\"\n}];\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headers: [\"S.No.\", \"AWB Number\", \"Courier Company\", \"Status\", \"Actions\"],\n      awbList: [],\n      addAwbField: {},\n      currentPage: 1,\n      totalPages: 1\n    };\n\n    this.getAwbDetails = () => {\n      const currentPage = this.state.currentPage;\n      const url = \"my-awb?page=\".concat(currentPage);\n      console.log(url);\n      awbTrackerApi.get(url).then(({\n        data: response\n      }) => {\n        console.log(\"responseeeee\", response);\n\n        if (response.success) {\n          const awbList = response.tracking,\n                total_awb = response.total_awb,\n                per_page = response.per_page;\n          let totalPages = 0;\n\n          if (total_awb && per_page) {\n            const pageCount = total_awb / per_page;\n            totalPages = pageCount < 1 ? 1 : Math.ceil(pageCount);\n          }\n\n          this.setState({\n            awbList,\n            totalPages\n          });\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.previousPage = () => {\n      const currentPage = this.state.currentPage;\n\n      if (currentPage > 1) {\n        this.setState(prevState => ({\n          currentPage: --prevState.currentPage\n        }), () => this.getAwbDetails());\n      }\n    };\n\n    this.nextPage = () => {\n      const _this$state = this.state,\n            currentPage = _this$state.currentPage,\n            totalPages = _this$state.totalPages;\n\n      if (currentPage !== totalPages) {\n        this.setState(prevState => ({\n          currentPage: ++prevState.currentPage\n        }), () => this.getAwbDetails());\n      }\n    };\n\n    this.addAwb = async formValue => {\n      const alert = this.props.alert;\n      alert.info(\"Adding AWB! Please wait...\", {\n        timeout: 1000\n      });\n      const request = await awbTrackerApi.post(\"add-awb\", formValue);\n\n      if (!request) {\n        alert.error(\"Something went wrong.\");\n      } else {\n        const response = request.data;\n        const history = this.props.history;\n\n        if (response.success) {\n          // Go to dashboard and set token\n          this.getAwbDetails();\n          history.push(\"/dashboard\");\n          alert.success(response.msg, {\n            timeout: 3000\n          });\n        } else {\n          alert.error(response.msg);\n        }\n      }\n    };\n\n    this.deleteAwb = async awbNo => {\n      const alert = this.props.alert;\n      alert.info(\"Deleting AWB! Please wait...\", {\n        timeout: 1000\n      });\n      const request = await awbTrackerApi.post(\"delete-awb\", {\n        awbNo\n      });\n\n      if (!request) {\n        alert.error(\"Something went wrong.\");\n      } else {\n        const response = request.data;\n        const history = this.props.history;\n\n        if (response.success) {\n          // Go to dashboard and set token\n          this.getAwbDetails();\n          history.push(\"/dashboard\");\n          alert.success(response.msg, {\n            timeout: 3000\n          });\n        } else {\n          alert.error(response.msg);\n        }\n      }\n    };\n\n    this.addTrackingDetails = async formValue => {\n      const alert = this.props.alert;\n      alert.info(\"Adding Tracking Details! Please wait...\", {\n        timeout: 1000\n      });\n      const request = await awbTrackerApi.post(\"edit-awb\", formValue);\n\n      if (!request) {\n        alert.error(\"Something went wrong.\");\n      } else {\n        const response = request.data;\n        const history = this.props.history;\n\n        if (response.success) {\n          // Go to dashboard and set token\n          this.getAwbDetails();\n          history.push(\"/dashboard\");\n          alert.success(response.msg, {\n            timeout: 3000\n          });\n        } else {\n          alert.error(response.msg);\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getAwbDetails();\n  }\n\n  render() {\n    const path = this.props.match.path;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Navbar, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: path,\n      component: () => React.createElement(TableView, Object.assign({}, this.state, this.props, {\n        nextPage: this.nextPage,\n        previousPage: this.previousPage,\n        deleteAwb: this.deleteAwb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(path, \"/add\"),\n      component: () => React.createElement(AddEditAwb, {\n        formFields: addAwbForm,\n        buttonText: \"Add AWB\",\n        onSubmit: this.addAwb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(path, \"/addtrack\"),\n      component: props => React.createElement(AddEditAwb, Object.assign({}, props, {\n        formFields: statusUpadteForm,\n        buttonText: \"Add Tracking Details\",\n        onSubmit: this.addTrackingDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withAlert()(Dashboard);","map":{"version":3,"sources":["/Users/samarthsaxena/Desktop/tracker/react-tracker/src/components/Dashboard/Dashboard.jsx"],"names":["React","Component","Navbar","TableView","Route","awbTrackerApi","withAlert","AddEditAwb","addAwbForm","name","label","statusUpadteForm","Dashboard","state","headers","awbList","addAwbField","currentPage","totalPages","getAwbDetails","url","console","log","get","then","data","response","success","tracking","total_awb","per_page","pageCount","Math","ceil","setState","catch","err","previousPage","prevState","nextPage","addAwb","formValue","alert","props","info","timeout","request","post","error","history","push","msg","deleteAwb","awbNo","addTrackingDetails","componentDidMount","render","path","match"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Navbar from \"./Navbar\";\n\nimport TableView from \"./TableView\";\nimport { Route } from \"react-router-dom\";\n\nimport awbTrackerApi from \"../../API\";\nimport { withAlert } from \"react-alert\";\n\nimport AddEditAwb from \"./AddAwb\";\n\nconst addAwbForm = [\n  {\n    name: \"awbNo\",\n    label: \"AWB Number\"\n  },\n  {\n    name: \"from\",\n    label: \"From\"\n  },\n  {\n    name: \"to\",\n    label: \"To\"\n  },\n  {\n    name: \"courierCompany\",\n    label: \"Courier Company\"\n  },\n  {\n    name: \"courierType\",\n    label: \"Courier Type\"\n  },\n  {\n    name: \"charge\",\n    label: \"Shimpment Amount\"\n  }\n];\n\nconst statusUpadteForm = [\n  {\n    name: \"currentLocation\",\n    label: \"Current Location\"\n  },\n  {\n    name: \"status\",\n    label: \"Status\"\n  },\n  {\n    name: \"description\",\n    label: \"Description\"\n  }\n];\n\nclass Dashboard extends Component {\n  state = {\n    headers: [\"S.No.\", \"AWB Number\", \"Courier Company\", \"Status\", \"Actions\"],\n    awbList: [],\n    addAwbField: {},\n    currentPage: 1,\n    totalPages: 1\n  };\n\n  getAwbDetails = () => {\n    const { currentPage } = this.state;\n    const url = `my-awb?page=${currentPage}`;\n\n    console.log(url);\n\n    awbTrackerApi\n      .get(url)\n      .then(({ data: response }) => {\n        console.log(\"responseeeee\", response);\n\n        if (response.success) {\n          const { tracking: awbList, total_awb, per_page } = response;\n          let totalPages = 0;\n          if (total_awb && per_page) {\n            const pageCount = total_awb / per_page;\n            totalPages = pageCount < 1 ? 1 : Math.ceil(pageCount);\n          }\n          this.setState({ awbList, totalPages });\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  previousPage = () => {\n    const { currentPage } = this.state;\n\n    if (currentPage > 1) {\n      this.setState(\n        prevState => ({ currentPage: --prevState.currentPage }),\n        () => this.getAwbDetails()\n      );\n    }\n  };\n\n  nextPage = () => {\n    const { currentPage, totalPages } = this.state;\n\n    if (currentPage !== totalPages) {\n      this.setState(\n        prevState => ({ currentPage: ++prevState.currentPage }),\n        () => this.getAwbDetails()\n      );\n    }\n  };\n\n  addAwb = async formValue => {\n    const { alert } = this.props;\n    alert.info(\"Adding AWB! Please wait...\", { timeout: 1000 });\n    const request = await awbTrackerApi.post(\"add-awb\", formValue);\n\n    if (!request) {\n      alert.error(\"Something went wrong.\");\n    } else {\n      const { data: response } = request;\n      const { history } = this.props;\n\n      if (response.success) {\n        // Go to dashboard and set token\n\n        this.getAwbDetails();\n        history.push(\"/dashboard\");\n\n        alert.success(response.msg, { timeout: 3000 });\n      } else {\n        alert.error(response.msg);\n      }\n    }\n  };\n\n  deleteAwb = async awbNo => {\n    const { alert } = this.props;\n    alert.info(\"Deleting AWB! Please wait...\", { timeout: 1000 });\n    const request = await awbTrackerApi.post(\"delete-awb\", { awbNo });\n\n    if (!request) {\n      alert.error(\"Something went wrong.\");\n    } else {\n      const { data: response } = request;\n      const { history } = this.props;\n\n      if (response.success) {\n        // Go to dashboard and set token\n\n        this.getAwbDetails();\n        history.push(\"/dashboard\");\n\n        alert.success(response.msg, { timeout: 3000 });\n      } else {\n        alert.error(response.msg);\n      }\n    }\n  };\n\n  addTrackingDetails = async formValue => {\n    const { alert } = this.props;\n    alert.info(\"Adding Tracking Details! Please wait...\", { timeout: 1000 });\n    const request = await awbTrackerApi.post(\"edit-awb\", formValue);\n\n    if (!request) {\n      alert.error(\"Something went wrong.\");\n    } else {\n      const { data: response } = request;\n      const { history } = this.props;\n\n      if (response.success) {\n        // Go to dashboard and set token\n\n        this.getAwbDetails();\n        history.push(\"/dashboard\");\n\n        alert.success(response.msg, { timeout: 3000 });\n      } else {\n        alert.error(response.msg);\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.getAwbDetails();\n  }\n\n  render() {\n    const { path } = this.props.match;\n\n    return (\n      <div>\n        <Navbar {...this.props} />\n\n        <Route\n          exact\n          path={path}\n          component={() => (\n            <TableView\n              {...this.state}\n              {...this.props}\n              nextPage={this.nextPage}\n              previousPage={this.previousPage}\n              deleteAwb={this.deleteAwb}\n            />\n          )}\n        />\n\n        <Route\n          exact\n          path={`${path}/add`}\n          component={() => (\n            <AddEditAwb\n              formFields={addAwbForm}\n              buttonText=\"Add AWB\"\n              onSubmit={this.addAwb}\n            />\n          )}\n        />\n\n        <Route\n          exact\n          path={`${path}/addtrack`}\n          component={props => (\n            <AddEditAwb\n              {...props}\n              formFields={statusUpadteForm}\n              buttonText=\"Add Tracking Details\"\n              onSubmit={this.addTrackingDetails}\n            />\n          )}\n        />\n\n        {/* <Route\n          exact\n          path={`${path}/edit`}\n          component={() => (\n            <AddEditAwb formFields={addAwbForm} buttonText=\"Edit AWB\" />\n          )}\n        /> */}\n\n        {/* <TableView headers={this.state.headers} data={this.state.awbList} /> */}\n      </div>\n    );\n  }\n}\n\nexport default withAlert()(Dashboard);\n"]},"metadata":{},"sourceType":"module"}